package com.example.composecircle

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.Dp
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            MyApp()
        }
    }
}

@Composable
fun MyApp() {
    MaterialTheme {
        CircleWithTextAndIndicator()
    }
}

@Composable
fun CircleWithTextAndIndicator(
    circleSize: Dp = 150.dp,
    textSize: Dp = 60.dp,
    indicatorSize: Dp = 20.dp
) {
    Box(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp), // Add padding for better visual spacing
        contentAlignment = Alignment.Center
    ) {
        Box(
            modifier = Modifier
                .size(circleSize)
                .clip(CircleShape)
                .background(Color(0xFF212121)) //Dark Gray Background
        ) {
            Text(
                text = "AD",
                color = Color.White,
                fontSize = textSize.value.sp,
                fontWeight = FontWeight.Bold,
                textAlign = TextAlign.Center,
                modifier = Modifier.align(Alignment.Center)
            )
        }
        Box(
            modifier = Modifier
                .size(indicatorSize)
                .clip(CircleShape)
                .background(Color(0xFF4CAF50)) // Green Indicator
                .align(Alignment.BottomEnd)
                .padding(bottom = 10.dp, end = 10.dp)
        )
    }
}

@Composable
@Preview(showBackground = true)
fun CircleWithTextAndIndicatorPreview() {
    MyApp()
}
